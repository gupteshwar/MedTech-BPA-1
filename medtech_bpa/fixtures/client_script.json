[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2024-04-18 18:30:09.102060",
  "module": null,
  "name": "item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\tif(frm.doc.name == 'FA-O2324-0894'){\n\t\t    frm.doc.end_of_life = '2099-12-31';\n\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Reconciliation",
  "enabled": 1,
  "modified": "2024-05-13 17:54:41.177333",
  "module": null,
  "name": "Payment Reconciliation",
  "script": "frappe.ui.form.on('Payment Reconciliation', {\n    party: function(frm) {\n        frm.set_value(\"invoice_limit\", 0);\n        frm.set_value(\"payment_limit\", 0);\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Reconciliation",
  "enabled": 0,
  "modified": "2021-10-04 10:33:27.655565",
  "module": null,
  "name": "Payment Reconciliation-Form",
  "script": "frappe.ui.form.on('Payment Reconciliation', {\n\trefresh(frm) {\n\t}\n})\nfrappe.ui.form.on('Payment Reconciliation Invoice', {\n\trefresh(frm) {\n\t{\n\tcur_frm.add_fetch(\"purchase_invoice\", \"bill_no\", \"bill_no\");\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Gate Pass Entry",
  "enabled": 0,
  "modified": "2021-04-02 13:50:19.203815",
  "module": null,
  "name": "Gate Pass Entry-Client",
  "script": "frappe.ui.form.on('Gate Pass', {\r\nrefresh(frm) {\r\n   frm.set_query('transporter_name', () => {\r\n       return {\r\n           filters : {\r\n              'is_transporter': 1\r\n           }\r\n       }\r\n   });\r\n   \r\n   frm.set_query('supplier_name', () => {\r\n       return {\r\n           filters : {\r\n              'is_transporter': 0\r\n           }\r\n       }\r\n   });\r\n   \r\nif (frm.is_new()) {\r\n   frm.set_value('time_of_visit', frappe.datetime.now_time());\r\n}\r\n\r\nif (!frm.doc.__unsaved && !frm.is_new()) {\r\n   frm.add_custom_button('Vehicle Weighing', () => {\r\n      let doc = {\r\n          'gate_pass_no': frm.doc.name,\r\n          'vehicle_no': frm.doc.vehicle_no,\r\n          'visitor_name': frm.doc.visitor_name\r\n      }\r\n      frappe.new_doc('Vehicle Weighing', doc);\r\n   }, __('Create'));\r\n}\r\n},\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-02-03 17:35:29.277233",
  "module": null,
  "name": "Sales Order-Client",
  "script": "frappe.ui.form.on('Sales Order', {\n\trefresh(frm) {\n\t  \n\t  frappe.ui.form.on('Sales Order', {\n   order_type:function(frm){\n       var data = cur_frm.doc.order_type\n       console.log(data);\n       if(cur_frm.doc.order_type == 'Sales'){\n           cur_frm.set_value(\"naming_series\",\"SO-D-DM2122-.####\")\n       }\n       else if(cur_frm.doc.order_type == 'Export'){\n           cur_frm.set_value(\"naming_series\",\"SAL-EXP-ORD-2021-\")\n       }\n       else if(cur_frm.doc.order_type == 'Repairing'){\n           cur_frm.set_value(\"naming_series\",\"SAL-REP-ORD-2021-\")\n       }\n       else if(cur_frm.doc.order_type == 'Merchant Export'){\n           cur_frm.set_value(\"naming_series\",\"SO-M-DN2122-\")\n       }\n   }\n})\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2021-04-19 18:40:05.118696",
  "module": null,
  "name": "Payment Entry-Client",
  "script": "frappe.ui.form.on('Payment Entry', {\n\trefresh(frm)\n\t{\n\tif(fr.doc.payment_type == \"Pay\") {\n\tcur_frm.add_fetch(\"bank_account\", \"account\", \"paid_from\");\n\t}\n\telse if (fr.doc.payment_type == \"Receive\"){\n\tcur_frm.add_fetch(\"bank_account\", \"account\", \"paid_to\");\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2021-04-19 18:40:57.169145",
  "module": null,
  "name": "Stock Entry-Client",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm)\n\t{\n\t    if(fr.doc.stock_entry_type == \"Manufacture\") {\n\t$('*[data-fieldname=\"items\"]').find('.grid-remove-rows').hide();\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2022-02-03 18:15:35.400220",
  "module": null,
  "name": "Delivery Note-Form",
  "script": "// frappe.ui.form.on('Delivery Note', {\n// \trefresh(frm) {\n// \t\t// your code here\n// \t}\n// })\nfrappe.ui.form.on('Delivery Note', {\n\trefresh(frm) {\n\t  \n\t  frappe.ui.form.on('Delivery Note', {\n   order_type:function(frm){\n       var data = cur_frm.doc.order_type\n       console.log(data);\n       if(cur_frm.doc.order_type == 'Merchant Export'){\n           cur_frm.set_value(\"naming_series\",\"DN-M-DN2122-\")\n       }\n       \n   }\n})\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-05-05 12:30:54.511571",
  "module": "MedTech-BPA",
  "name": "Hide Item Price in Sales Order",
  "script": "frappe.ui.form.on('Sales Order', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n        hide_payment_schedule_price_columns(frm);\n        \n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm); \n        hide_payment_schedule_price_columns(frm);\n        \n    },\n    // form_render:function(frm){\n    //      hide_item_price_columns(frm);  \n    // },\n    \n});\nfrappe.ui.form.on('Sales Order Item', {\n    form_render:function(frm){\n        hide_item_price_columns(frm);  \n    },\n    items_add:function(frm){\n        hide_item_price_columns(frm); \n    },\n    before_items_remove:function(frm){\n        hide_item_price_columns(frm);\n    },\n    items_remove:function(frm){\n        hide_item_price_columns(frm); \n    },\n    items_move:function(frm){\n        hide_item_price_columns(frm); \n    },\n    \n});\nfrappe.ui.form.on('Sales Taxes and Charges', {\n    form_render:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    taxes_add:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    before_taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_remove:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    taxes_move:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    \n});\nfrappe.ui.form.on('Payment Schedule', {\n    form_render:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_add:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    before_payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_move:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    \n});\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                // Hide child table fields\n                const fields_to_hide = [\n                    \"rate\", \"amount\", \"price_list_rate\", \"base_price_list_rate\", \"custom_mrp\",\n                    \"base_rate\", \"base_amount\", \"net_rate\", \"net_amount\", \"base_net_rate\",\n                    \"base_net_amount\", \"fully_discount_rate\",\"taxable_value\",\"gst_details_section\"\n                ];\n                fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n\n                // Hide document-level fields\n                const doc_level_fields = [\n                    \"total\", \"grand_total\", \"rounding_adjustment\", \"rounded_total\", \"in_words\",\"advance_paid\",\"base_total_taxes_and_charges\",\"total_taxes_and_charges\"\n                ];\n                doc_level_fields.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n                \n                \n                setTimeout(() => {\n                  \n                    \n                    fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='items'] .grid-heading:contains('${field}')`).hide().css(\"width\", \"0\");\n                        $(`div[data-fieldname='items'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                        });\n                    });\n\n                    doc_level_fields.forEach(field => {\n                        $(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                    });\n                }, 500);\n            }\n        }\n    });\n}\n \nfunction hide_taxes_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const taxes_child_table = \"taxes\";\n              \n                const taxes_fields_to_hide = [\n                    \"rate\",\"account_currency\",\"tax_amount\",\"base_tax_amount\",\"tax_amount_after_discount_amount\",\n                    \"base_tax_amount_after_discount_amount\",\"total\",\"base_total\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const tax_grid = frm.get_field(taxes_child_table)?.grid;\n                if(tax_grid){\n                    taxes_fields_to_hide.forEach(field =>{\n                        tax_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    taxes_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Sales Taxes and Charges\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\nfunction hide_payment_schedule_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const payment_schedule_child_table = \"payment_schedule\";\n              \n                const payment_schedule_fields_to_hide = [\n                    \"payment_amount\",\"outstanding\",\"base_payment_amount\",\"discount\",\"base_outstanding\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const payment_grid = frm.get_field(payment_schedule_child_table)?.grid;\n                if(payment_grid){\n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        payment_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Payment Schedule\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-05-05 12:28:41.903265",
  "module": "MedTech-BPA",
  "name": "Hide Item Price Purchase Order",
  "script": "frappe.ui.form.on('Purchase Order', {\n    onload: function(frm) {\n        if(frappe.user.has_role(\"Hide Item Price\")){\n            setTimeout(() => {\n                hide_payment_schedule_price_columns(frm);\n                hide_rate_and_amount_fields(frm);\n            }, 100);\n        }\n    },\n    refresh: function(frm) {\n        if(frappe.user.has_role(\"Hide Item Price\")){\n            hide_payment_schedule_price_columns(frm);\n            hide_rate_and_amount_fields(frm);\n        }\n    },\n    // items_on_form_rendered: function(frm) {\n    //     if(frappe.user.has_role(\"Hide Item Price\")){\n    //         hide_rate_and_amount_fields(frm);\n    //     }\n    // },\n    // item_add:function(frm){\n    //     if(frappe.user.has_role(\"Hide Item Price\")){\n    //         hide_rate_and_amount_fields(frm);\n    //     }\n    \n    // },\n    // payment_schedule_on_form_rendered: function(frm) {\n    //     hide_payment_schedule_price_columns(frm);\n        \n    // },\n    // payment_schedule_add:function(frm){\n    //     hide_payment_schedule_price_columns(frm);\n       \n    \n    // }\n});\nfrappe.ui.form.on('Purchase Order Item', {\n    form_render:function(frm){\n        hide_rate_and_amount_fields(frm);\n    },\n    payment_schedule_add:function(frm){\n        hide_rate_and_amount_fields(frm);\n    },\n    before_payment_schedule_remove:function(frm){\n        hide_rate_and_amount_fields(frm);\n    },\n    payment_schedule_remove:function(frm){\n        hide_rate_and_amount_fields(frm);\n    },\n    payment_schedule_move:function(frm){\n        hide_rate_and_amount_fields(frm);\n    },\n    \n});\nfrappe.ui.form.on('Payment Schedule', {\n    form_render:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_add:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    before_payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_move:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    \n});\n\nfunction hide_rate_and_amount_fields(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                // Define the fields you want to hide\n                const fields_to_hide = ['rate', 'amount', 'base_rate', 'base_amount','taxable_value']; // Add your fields here\n                const doc_level_fields = ['total', 'grand_total', 'rounded_total','total_taxes_and_charges','taxes_and_charges_added']; // Add your doc level fields here\n                \n                setTimeout(() => {\n\n                // Add custom CSS to handle grid layout\n                if (!$('#custom_grid_style').length) {\n                    $('<style id=\"custom_grid_style\"></style>').appendTo('head');\n                }\n                \n                let style_content = '';\n                fields_to_hide.forEach(field => {\n                    style_content += `\n                        div[data-fieldname='items'] .grid-heading-row .grid-static-col[data-fieldname='${field}'],\n                        div[data-fieldname='items'] .grid-row .grid-static-col[data-fieldname='${field}'],\n                        div[data-fieldname='items'] .grid-row .grid-field[data-fieldname='${field}'] {\n                            display: none !important;\n                            padding: 0 !important;\n                            width: 0 !important;\n                            max-width: 0 !important;\n                            overflow: hidden !important;\n                        }\n                    `;\n                });\n        \n        // Hide fields in child table (items)\n                const item_fields_to_hide = [\n                    \"rate\", \n                    \"amount\", \n                    \"base_rate\", \n                    \"base_net_rate\",\n                    \"base_amount\", \n                    \"base_net_amount\",\n                    \"last_purchase_rate\",\n                    \"price_list_rate\", \n                    \"base_price_list_rate\",\n                    \"discount_amount\", \n                    \"net_rate\", \n                    \"net_amount\",\n                    \"stock_uom_rate\",\n                    \"taxable_value\",\n                    \"billed_amt\",\n                   \n                ];\n\n                item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n        \n        \n                \n                $('#custom_grid_style').html(style_content);\n                \n                // Fix column layout by adjusting remaining columns\n                setTimeout(() => {\n                    // This forces the grid to recalculate column widths\n                    $(window).trigger('resize');\n                    $(`div[data-fieldname='items'] .filter-row`).hide();\n        \n                    \n                    // If needed, manually distribute space among visible columns\n                    const visibleCols = $(`div[data-fieldname='items'] .grid-heading-row .grid-static-col:visible`).length;\n                    if (visibleCols > 0) {\n                        const idealWidth = (100 / visibleCols) + '%';\n                        $(`div[data-fieldname='items'] .grid-heading-row .grid-static-col:visible`).css('width', idealWidth);\n                        $(`div[data-fieldname='items'] .grid-row .grid-static-col:visible`).css('width', idealWidth);\n                    }\n                }, 100);\n                \n                // Hide doc level fields\n                doc_level_fields.forEach(field => {\n                    $(`div[data-fieldname='${field}']`).closest('.frappe-control').hide();\n                });\n            }, 500);\n        }\n        }\n    \n});\n}\nfunction hide_payment_schedule_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const payment_schedule_child_table = \"payment_schedule\";\n              \n                const payment_schedule_fields_to_hide = [\n                    \"payment_amount\",\"outstanding\",\"base_payment_amount\",\"base_outstanding\",\"discount\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const payment_grid = frm.get_field(payment_schedule_child_table)?.grid;\n                if(payment_grid){\n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        payment_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Payment Schedule\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-05-05 12:37:18.034598",
  "module": "MedTech-BPA",
  "name": "Hide Item Price - Purchase Invoice",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n        hide_payment_schedule_price_columns(frm);\n\n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n        hide_payment_schedule_price_columns(frm);\n\n    },\n    form_render: function(frm) {\n        hide_item_price_columns(frm);\n        hide_payment_schedule_price_columns(frm);\n    }\n    \n});\nfrappe.ui.form.on('Purchase Invoice Item', {\n    form_render:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_add:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    before_items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_move:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    \n})\nfrappe.ui.form.on('Purchase Taxes and Charges', {\n    form_render:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_add:function(frm){\n        hide_taxes_price_columns(frm);  \n    },\n    before_taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_move:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n});\nfrappe.ui.form.on('Payment Schedule', {\n    form_render:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_add:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    before_payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_move:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    \n});\n\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                // Hide child table fields (items)\n                const item_fields_to_hide = [\n                    \"rate\", \n                    \"amount\", \n                    \"base_rate\", \n                    \"base_net_rate\",\n                    \"base_net_amount\",\n                    \"base_amount\", \n                    \"price_list_rate\", \n                    \"base_price_list_rate\",\n                    \"discount_amount\", \n                    \"net_rate\", \n                    \"net_amount\",\n                    \"taxable_value\",\n                    \"gst_details_section\"\n                ];\n\n                item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n\n                // Hide document-level total fields\n                const doc_fields_to_hide = [\n                    \"total\", \n                    \"net_total\", \n                    \"base_total\", \n                    \"base_net_total\", \n                    \"grand_total\", \n                    \"base_grand_total\", \n                    \"rounded_total\", \n                    \"base_rounded_total\",\n                    \"rounding_adjustment\",\n                    \"in_words\",\n                    \"total_advance\",\n                    \"total_advance\",\n                    \"outstanding_amount\",\n                    \"taxes_and_charges_added\",\n                    \"taxes_and_charges_deducted\",\n                    \"taxes_and_charges_deducted\",\n                    \"total_taxes_and_charges\"\n                    \n                ];\n\n                doc_fields_to_hide.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n\n                // Optional: Hide column headers visually with jQuery\n                setTimeout(() => {\n                  \n\n                    $(\"div[data-fieldname='items'] .grid-heading\").each(function () {\n                        const text = $(this).text().trim().toLowerCase();\n                        if (text.includes(\"rate\") || text.includes(\"amount\") || text.includes(\"price\")) {\n                            $(this).hide().css(\"width\", \"0\");\n                        }\n                    });\n\n                    $(\"div[data-fieldname='items'] .grid-row\").each(function () {\n                        $(this).find(\"div[data-fieldname='rate'], div[data-fieldname='amount']\").hide().css(\"width\", \"0\");\n                    });\n                }, 500);\n            }\n        }\n    });\n}\n\nfunction hide_taxes_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const taxes_child_table = \"taxes\";\n              \n                const taxes_fields_to_hide = [\n                    \"rate\",\"account_currency\",\"tax_amount\",\"base_tax_amount\",\"tax_amount_after_discount_amount\",\n                    \"base_tax_amount_after_discount_amount\",\"total\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const tax_grid = frm.get_field(taxes_child_table)?.grid;\n                if(tax_grid){\n                    taxes_fields_to_hide.forEach(field =>{\n                        tax_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    taxes_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Purchase Taxes and Charges\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\nfunction hide_payment_schedule_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const payment_schedule_child_table = \"payment_schedule\";\n              \n                const payment_schedule_fields_to_hide = [\n                    \"payment_amount\",\"outstanding\",\"base_payment_amount\",\"base_outstanding\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const payment_grid = frm.get_field(payment_schedule_child_table)?.grid;\n                if(payment_grid){\n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        payment_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Payment Schedule\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-05-05 12:23:52.112419",
  "module": "MedTech-BPA",
  "name": "Hide Item Price in Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm); \n        hide_payment_schedule_price_columns(frm);\n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n        hide_payment_schedule_price_columns(frm);\n    },\n    form_render:function(frm){\n        hide_item_price_columns(frm); \n        hide_taxes_price_columns(frm); \n    }\n    \n});\nfrappe.ui.form.on('Sales Invoice Item', {\n    form_render:function(frm){\n        hide_item_price_columns(frm);\n    },\n    items_add:function(frm){\n       hide_item_price_columns(frm);\n    },\n    before_items_remove:function(frm){\n        hide_item_price_columns(frm);\n    },\n    items_remove:function(frm){\n        hide_item_price_columns(frm);\n    },\n    items_move:function(frm){\n        hide_item_price_columns(frm);\n  \n    },\n    \n});\nfrappe.ui.form.on('Sales Taxes and Charges', {\n    form_render:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_add:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    before_taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_move:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    \n});\nfrappe.ui.form.on('Payment Schedule', {\n    form_render:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_add:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    before_payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_remove:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    payment_schedule_move:function(frm){\n        hide_payment_schedule_price_columns(frm);\n    },\n    \n});\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            if (roles.includes(\"Hide Item Price\")) {\n                // Hide child table fields in \"items\"\n                const item_fields_to_hide = [\n                    \"rate\", \n                    \"amount\", \n                    \"base_rate\", \n                    \"base_amount\", \n                    \"price_list_rate\", \n                    \"discount_amount\", \n                    \"net_rate\", \n                    \"net_amount\",\n                    \"base_price_list_rate\",\n                    \"fully_discount_rate\",\n                    \"custom_mrp\",\n                    \"base_net_rate\",\n                    \"base_net_amount\",\n                    \"taxable_value\",\n                    \"gst_details_section\"\n                ];\n\n                item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n\n                // Hide document-level fields\n                const doc_fields_to_hide = [\n                    \"total\", \n                    \"net_total\", \n                    \"base_net_total\",\n                    \"base_total\", \n                    \"grand_total\", \n                    \"base_grand_total\", \n                    \"rounded_total\", \n                    \"base_rounded_total\",\n                    \"total_qty\",\n                    \"rounding_adjustment\",\n                    \"in_words\",\n                    \"outstanding_amount\",\n                    \"total_advance\",\n                    \"total_taxes_and_charges\"\n                    \n                ];\n\n                doc_fields_to_hide.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n\n                // Optional: CSS-based hiding fallback for grid headers and cells\n                setTimeout(() => {\n                    $(\"div[data-fieldname='items'] .grid-heading\").each(function () {\n                        const text = $(this).text().trim().toLowerCase();\n                        if (text.includes(\"rate\") || text.includes(\"amount\")) {\n                            $(this).hide().css(\"width\", \"0\");\n                        }\n                    });\n\n                    $(\"div[data-fieldname='items'] .grid-row\").each(function () {\n                        $(this).find(\"div[data-fieldname='rate'], div[data-fieldname='amount']\").hide().css(\"width\", \"0\");\n                    });\n                }, 500);\n            }\n        }\n    });\n}\n\nfunction hide_taxes_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            if (roles.includes(\"Hide Item Price\")) {\n                const taxes_child_table = \"taxes\";\n              \n                const taxes_fields_to_hide = [\n                    \"rate\",\"account_currency\",\"tax_amount\",\"base_tax_amount\",\"tax_amount_after_discount_amount\",\n                    \"base_tax_amount_after_discount_amount\",\"total\",\"base_total\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const tax_grid = frm.get_field(taxes_child_table)?.grid;\n                if(tax_grid){\n                    taxes_fields_to_hide.forEach(field =>{\n                        tax_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    taxes_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Sales Taxes and Charges\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\nfunction hide_payment_schedule_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            if (roles.includes(\"Hide Item Price\")) {\n                const payment_schedule_child_table = \"payment_schedule\";\n              \n                const payment_schedule_fields_to_hide = [\n                    \"payment_amount\",\"outstanding\",\"base_payment_amount\",\"discount\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const payment_grid = frm.get_field(payment_schedule_child_table)?.grid;\n                if(payment_grid){\n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        payment_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    payment_schedule_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Payment Schedule\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${payment_schedule_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2025-04-28 17:49:50.593865",
  "module": "MedTech-BPA",
  "name": "Hide Item Price in Item",
  "script": "frappe.ui.form.on('Item', {\n    onload: function(frm) {\n        hide_item_price_fields(frm);\n        taxes_price_columns(frm);\n    },\n    refresh: function(frm) {\n        hide_item_price_fields(frm);\n        taxes_price_columns(frm);\n    }\n});\nfrappe.ui.form.on('Item Tax', {\n    form_render:function(frm){\n        taxes_price_columns(frm);\n    },\n    taxes_add:function(frm){\n        taxes_price_columns(frm);\n    },\n    before_taxes_remove:function(frm){\n        taxes_price_columns(frm);\n    },\n    taxes_remove:function(frm){\n        taxes_price_columns(frm);\n    },\n    taxes_move:function(frm){\n        taxes_price_columns(frm);\n    },\n    \n});\n\nfunction hide_item_price_fields(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            console.log(\"User Roles:\", roles);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                // List of fields to hide in Item Doctype\n                const fields_to_hide = [\n                    \"standard_rate\",\n                    \"last_purchase_rate\",\n                    \"valuation_rate\",\n                  \n                ];\n\n                fields_to_hide.forEach(fieldname => {\n                    frm.set_df_property(fieldname, \"hidden\", 1);\n                });\n\n                frm.refresh_fields();\n            }\n        }\n    });\n}\n\nfunction taxes_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            console.log(\"User Roles:\", roles);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const taxes_child_table = \"taxes\";\n              \n                const taxes_fields_to_hide = [\n                    \"minimum_net_rate\",\"maximum_net_rate\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const taxes_grid = frm.get_field(taxes_child_table)?.grid;\n                if(taxes_grid){\n                    taxes_fields_to_hide.forEach(field =>{\n                        taxes_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    taxes_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Item Tax\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-05-05 12:48:24.653991",
  "module": "MedTech-BPA",
  "name": "Hide Item Price - Stock Entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n    }\n});\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const item_fields_to_hide = [\n                    \"basic_rate\",\n                    \"amount\",\n                    \"basic_amount\",\n                    \"valuation_rate\",\n                    \"rates_section\"\n                ];\n\n                // Hide item table columns\n                item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n\n                // Hide total-related fields in the main form\n                const doc_fields_to_hide = [\n                    \"total_outgoing_value\",\n                    \"total_incoming_value\",\n                    \"total_amount\",\n                    \"base_grand_total\",\n                    \"total_taxes\",\n                    \"value_difference\"\n                    \n                ];\n\n\n                doc_fields_to_hide.forEach(field => {\n                    cur_frm.set_df_property(field, \"hidden\", 1);\n                });\n\n                frm.refresh_fields();\n                // Optional: Hide headers + row content with jQuery\n                setTimeout(() => {\n                    $(\"div[data-fieldname='items'] .grid-heading\").each(function () {\n                        const label = $(this).text().trim().toLowerCase();\n                        if (label.includes(\"rate\") || label.includes(\"amount\") || label.includes(\"valuation\")) {\n                            $(this).hide().css(\"width\", \"0\");\n                        }\n                    });\n\n                    $(\"div[data-fieldname='items'] .grid-row\").each(function () {\n                        $(this).find(\"div[data-fieldname='basic_rate'], div[data-fieldname='amount'], div[data-fieldname='basic_amount'], div[data-fieldname='valuation_rate']\").hide().css(\"width\", \"0\");\n                    });\n                }, 500);\n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2025-05-05 12:46:30.498060",
  "module": "MedTech-BPA",
  "name": "Hide Item Price - Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n        \n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n       \n    }\n});\nfrappe.ui.form.on('Delivery Note Item', {\n    form_render:function(frm){\n        hide_item_price_columns(frm);  \n    },\n    items_add:function(frm){\n        hide_item_price_columns(frm);   \n    },\n    before_items_remove:function(frm){\n        hide_item_price_columns(frm);    \n    },\n    items_remove:function(frm){\n        hide_item_price_columns(frm); \n    },\n    items_move:function(frm){\n        hide_item_price_columns(frm);  \n    },\n    \n});\nfrappe.ui.form.on('Sales Taxes and Charges', {\n    form_render:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    items_add:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    before_items_remove:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    items_remove:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    items_move:function(frm){\n        hide_taxes_price_columns(frm); \n    },\n    \n});\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                // Hide child table columns\n                const item_fields_to_hide = [\n                    \"rate\", \n                    \"amount\", \n                    \"custom_mrp\",\n                    \"base_net_rate\",\n                    \"base_net_rate\",\n                    \"base_net_amount\",\n                    \"base_rate\", \n                    \"base_amount\", \n                    \"price_list_rate\", \n                    \"base_price_list_rate\",\n                    \"net_rate\", \n                    \"net_amount\",\n                    \"taxable_value\",\n                    \"fully_discount_rate\"\n                ];\n\n                item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n\n                // Hide document-level fields\n                const doc_fields_to_hide = [\n                    \"total\", \n                    \"net_total\", \n                    \"base_total\", \n                    \"base_net_total\", \n                    \"grand_total\", \n                    \"base_grand_total\",\n                    \"rounding_adjustment\",\n                    \"rounded_total\",\n                    \"in_words\",\n                    \"total_taxes_and_charges\"\n                ];\n\n                doc_fields_to_hide.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n\n                // Additional jQuery-based column header hiding (optional)\n                setTimeout(() => {\n\n                    $(\"div[data-fieldname='items'] .grid-heading\").each(function () {\n                        const label = $(this).text().trim().toLowerCase();\n                        if (label.includes(\"rate\") || label.includes(\"amount\") || label.includes(\"price\")) {\n                            $(this).hide().css(\"width\", \"0\");\n                        }\n                    });\n\n                    $(\"div[data-fieldname='items'] .grid-row\").each(function () {\n                        $(this).find(\"div[data-fieldname='rate'], div[data-fieldname='amount']\").hide().css(\"width\", \"0\");\n                    });\n                }, 500);\n            }\n        }\n    });\n}\n\nfunction hide_taxes_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const taxes_child_table = \"taxes\";\n              \n                const taxes_fields_to_hide = [\n                    \"rate\",\"account_currency\",\"tax_amount\",\"base_tax_amount\",\"tax_amount_after_discount_amount\",\n                    \"base_tax_amount_after_discount_amount\",\"total\",\"base_total\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const tax_grid = frm.get_field(taxes_child_table)?.grid;\n                if(tax_grid){\n                    taxes_fields_to_hide.forEach(field =>{\n                        tax_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    taxes_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Sales Taxes and Charges\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-05-05 12:34:48.567074",
  "module": "MedTech-BPA",
  "name": "Hide Item Price - Visual Inspection Report",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n\n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n\n    },\n    form_render: function(frm) {\n        hide_item_price_columns(frm);\n        hide_taxes_price_columns(frm);\n\n    }\n});\nfrappe.ui.form.on('Purchase Receipt Item', {\n    form_render:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_add:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    before_items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_move:function(frm){\n         hide_item_price_columns(frm);  \n    },\n});\nfrappe.ui.form.on('Purchase Taxes and Charges', {\n    form_render:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_add:function(frm){\n        hide_taxes_price_columns(frm);  \n    },\n    before_taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_remove:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n    taxes_move:function(frm){\n        hide_taxes_price_columns(frm);\n    },\n});\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const child_table = \"items\"; // child table fieldname\n                const taxes = \"taxes\";\n                const item_fields_to_hide = [\n                    \"rate\", \"amount\", \"base_rate\", \"base_amount\", \"net_rate\", \"net_amount\",\n                    \"base_net_amount\", \"base_net_rate\", \"base_price_list_rate\", \"price_list_rate\",\"taxable_value\"\n                ];\n                // const taxes_fields_to_hide = [\n                    // \"rate\",\"account_currency\",\"tax_amount\",\"base_tax_amount\",\"tax_amount_after_discount_amount\",\n                    // \"base_tax_amount_after_discount_amount\",\"total\"\n                    // ]\n\n                const doc_fields_to_hide = [\n                    \"total\", \"net_total\", \"base_total\", \"base_net_total\", \"grand_total\",\"taxes_and_charges_deducted\",\"total_taxes_and_charges\",\n                    \"base_grand_total\", \"rounding_adjustment\", \"rounded_total\", \"in_words\",\"taxes_and_charges_added\"\n                ];\n\n                // Hide child table columns using Frappe grid methods\n                const grid = frm.get_field(child_table)?.grid;\n                if (grid) {\n                    item_fields_to_hide.forEach(field => {\n                        grid.update_docfield_property(field, \"hidden\", true);\n                    });\n                }\n                \n                // const tax_grid = frm.get_field(taxes)?.grid;\n                // if(tax_grid){\n                //     taxes_fields_to_hide.forEach(field =>{\n                //         tax_grid.update_docfield_property(field,\"hidden\", true);\n                //     });\n                // }\n                // Hide form-level fields\n                doc_fields_to_hide.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                    item_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='${child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Purchase Receipt Item\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                    });\n                    // taxes_fields_to_hide.forEach(field =>{\n                    //     $(`div[data-fieldname='${taxes}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Purchase Taxes and Charges\", field)?.label || field}')`).hide();\n                    //     $(`div[data-fieldname='${taxes}'] .grid-row`).each(function () {\n                    //         $(this).find(`div[data-fieldname='${field}']`).hide();\n                    //     });\n                        \n                    // });\n\n\n                    doc_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='${field}']`).hide();\n                    });\n\n                }, 300);\n            }\n        }\n    });\n}\n\nfunction hide_taxes_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const taxes_child_table = \"taxes\";\n              \n                const taxes_fields_to_hide = [\n                    \"rate\",\"account_currency\",\"tax_amount\",\"base_tax_amount\",\"tax_amount_after_discount_amount\",\n                    \"base_tax_amount_after_discount_amount\",\"total\"\n                    ]\n\n                // Hide child table columns using Frappe grid methods\n                const tax_grid = frm.get_field(taxes_child_table)?.grid;\n                if(tax_grid){\n                    taxes_fields_to_hide.forEach(field =>{\n                        tax_grid.update_docfield_property(field,\"hidden\", true);\n                    });\n                }\n                // Also hide using jQuery in case of DOM rendering\n                setTimeout(() => {\n                  \n                    taxes_fields_to_hide.forEach(field =>{\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-heading:contains('${frappe.meta.get_docfield(\"Purchase Taxes and Charges\", field)?.label || field}')`).hide();\n                        $(`div[data-fieldname='${taxes_child_table}'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide();\n                        });\n                        \n                    });\n                    \n                }, 300);\n            }\n        }\n    });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM",
  "enabled": 1,
  "modified": "2025-05-05 15:43:53.905466",
  "module": "MedTech-BPA",
  "name": "Hide Item Price-BOM",
  "script": "frappe.ui.form.on('BOM', {\n    onload: function(frm) {\n        hide_bom_price_columns(frm);\n        // hide_item_price_columns(frm);\n        hide_exploded_item_price_columns(frm);\n    },\n    refresh: function(frm) {\n        hide_bom_price_columns(frm);\n        // hide_item_price_columns(frm);\n        hide_exploded_item_price_columns(frm);\n    },\n    // form_render: function(frm) {\n    //     hide_bom_price_columns(frm);\n    // }\n});\nfrappe.ui.form.on('BOM Item', {\n    form_render:function(frm){\n         hide_bom_price_columns(frm);  \n    },\n    items_add:function(frm){\n         hide_bom_price_columns(frm);  \n    },\n    before_items_remove:function(frm){\n         hide_bom_price_columns(frm);  \n    },\n    items_remove:function(frm){\n         hide_bom_price_columns(frm);  \n    },\n    items_move:function(frm){\n         hide_bom_price_columns(frm);  \n    },\n    \n});\nfrappe.ui.form.on('BOM Explosion Item', {\n    form_render:function(frm){\n        hide_exploded_item_price_columns(frm);  \n    },\n    exploded_items_add:function(frm){\n        hide_exploded_item_price_columns(frm);  \n    },\n    before_exploded_items_remove:function(frm){\n        hide_exploded_item_price_columns(frm);  \n    },\n    exploded_items_remove:function(frm){\n        hide_exploded_item_price_columns(frm);  \n    },\n    exploded_items_move:function(frm){\n        hide_exploded_item_price_columns(frm);  \n    },\n    \n});\n\nfunction hide_bom_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            if (roles.includes(\"Hide Item Price\")) {\n                \n                const bom_item_fields_to_hide = [\n                    \"rate\", \"amount\", \"base_rate\", \"base_amount\"\n                ];\n\n                // Hide price-related fields in BOM Item child table\n                bom_item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"items\").grid.toggle_display(field, false);\n                });\n\n                const exploded_item_fields_to_hide = [\n                    \"rate\", \"amount\"\n                ];\n\n                // Hide price-related fields in BOM Explosion Item child table\n                // exploded_item_fields_to_hide.forEach(field => {\n                //     frm.get_field(\"exploded_items\").grid.toggle_display(field, false);\n                // });\n\n                const doc_fields_to_hide = [\n                    \"total_cost\", \"base_total_cost\", \"raw_material_cost\",\"costing\"\n                ];\n\n                // Hide document-level fields in BOM\n                doc_fields_to_hide.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n\n                // DOM Manipulation to ensure visual hiding of fields\n                setTimeout(() => {\n                    bom_item_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='items'] .grid-heading:contains('${field}')`).hide().css(\"width\", \"0\");\n                        $(`div[data-fieldname='items'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                        });\n                    });\n                    \n                    // hide filter row\n                    $(`div[data-fieldname='items'] .filter-row`).hide();\n                    $(`div[data-fieldname='exploded_items'] .filter-row`).hide();\n\n\n                    exploded_item_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='exploded_items'] .grid-heading:contains('${field}')`).hide().css(\"width\", \"0\");\n                        $(`div[data-fieldname='exploded_items'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                        });\n                    });\n\n                    doc_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                    });\n                }, 300);\n            }\n        }\n    });\n}\n\nfunction hide_exploded_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n            if (roles.includes(\"Hide Item Price\")) {\n              \n                // const bom_item_fields_to_hide = [\n                //     \"rate\", \"amount\", \"base_rate\", \"base_amount\"\n                // ];\n\n                // // Hide price-related fields in BOM Item child table\n                // bom_item_fields_to_hide.forEach(field => {\n                //     frm.get_field(\"items\").grid.toggle_display(field, false);\n                // });\n\n                const exploded_item_fields_to_hide = [\n                    \"rate\", \"amount\"\n                ];\n\n                // Hide price-related fields in BOM Explosion Item child table\n                exploded_item_fields_to_hide.forEach(field => {\n                    frm.get_field(\"exploded_items\").grid.toggle_display(field, false);\n                });\n\n                const doc_fields_to_hide = [\n                    \"total_cost\", \"base_total_cost\", \"raw_material_cost\",\"costing\"\n                ];\n\n                // Hide document-level fields in BOM\n                doc_fields_to_hide.forEach(field => {\n                    frm.toggle_display(field, false);\n                });\n\n                // DOM Manipulation to ensure visual hiding of fields\n                setTimeout(() => {\n                    // bom_item_fields_to_hide.forEach(field => {\n                    //     $(`div[data-fieldname='items'] .grid-heading:contains('${field}')`).hide().css(\"width\", \"0\");\n                    //     $(`div[data-fieldname='items'] .grid-row`).each(function () {\n                    //         $(this).find(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                    //     });\n                    // });\n\n                    exploded_item_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='exploded_items'] .grid-heading:contains('${field}')`).hide().css(\"width\", \"0\");\n                        $(`div[data-fieldname='exploded_items'] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                        });\n                    });\n\n                    doc_fields_to_hide.forEach(field => {\n                        $(`div[data-fieldname='${field}']`).hide().css(\"width\", \"0\");\n                    });\n                }, 300);\n            }\n        }\n    });\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2025-05-05 12:44:42.771672",
  "module": "MedTech-BPA",
  "name": "Hide Item Price-Material Request",
  "script": "frappe.ui.form.on('Material Request', {\n    onload: function(frm) {\n        hide_item_price_columns(frm);\n    },\n    refresh: function(frm) {\n        hide_item_price_columns(frm);\n    },\n    form_render:function(frm){\n         hide_item_price_columns(frm);  \n    }\n});\nfrappe.ui.form.on('Material Request Item', {\n    form_render:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_add:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    before_items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_move:function(frm){\n         hide_item_price_columns(frm);  \n    },\n});\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function(response) {\n            const roles = response.message.roles.map(role => role.role);\n\n            if (roles.includes(\"Hide Item Price\")) {\n                const grid = frm.get_field(\"items\")?.grid;\n\n                // Hide child table popup fields\n                if (grid) {\n                    grid.toggle_display(\"rate\", false);\n                    grid.toggle_display(\"amount\", false);\n                }\n\n                setTimeout(() => {\n\n                    // Hide grid headers\n                    $(\"div[data-fieldname='items'] .grid-heading:contains('Rate')\").hide().css(\"width\", \"0\");\n                    $(\"div[data-fieldname='items'] .grid-heading:contains('Amount')\").hide().css(\"width\", \"0\");\n\n                    // Hide each row's fields\n                    $(\"div[data-fieldname='items'] .grid-row\").each(function () {\n                        $(this).find(\"div[data-fieldname='rate']\").hide().css(\"width\", \"0\");\n                        $(this).find(\"div[data-fieldname='amount']\").hide().css(\"width\", \"0\");\n                    });\n\n                    // Optional: hide total fields if they exist\n                    $(\"div[data-fieldname='total']\").hide().css(\"width\", \"0\");\n                    $(\"div[data-fieldname='grand_total']\").hide().css(\"width\", \"0\");\n\n                }, 500);\n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2025-04-28 17:53:30.466201",
  "module": "MedTech-BPA",
  "name": "Hide Item Price - Work Order",
  "script": "frappe.ui.form.on('Work Order', {\n    onload: function (frm) {\n        hide_item_price_columns(frm);\n    },\n    refresh: function (frm) {\n        hide_item_price_columns(frm);\n    },\n    form_render:function(frm){\n         hide_item_price_columns(frm);  \n    }\n});\nfrappe.ui.form.on('Work Order Item', {\n    form_render:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_add:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    before_items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_remove:function(frm){\n         hide_item_price_columns(frm);  \n    },\n    items_move:function(frm){\n         hide_item_price_columns(frm);  \n    },\n});\n\nfunction hide_item_price_columns(frm) {\n    frappe.call({\n        method: 'frappe.client.get',\n        args: {\n            doctype: 'User',\n            name: frappe.session.user\n        },\n        callback: function (response) {\n            const roles = response.message.roles.map(role => role.role);\n            if (roles.includes(\"Hide Item Price\")) {\n                const fields_to_hide = [\"rate\", \"amount\"];\n\n                // Hide columns from grid meta\n                frm.fields_dict[\"required_items\"].grid.update_docfield_property(\"rate\", \"hidden\", true);\n                frm.fields_dict[\"required_items\"].grid.update_docfield_property(\"amount\", \"hidden\", true);\n\n                // Force refresh the grid to reflect hidden columns\n                frm.refresh_field(\"required_items\");\n\n                // As a fallback, hide column headers and cells via jQuery\n                setTimeout(() => {\n                    fields_to_hide.forEach(field => {\n                        // Hide column headers\n                        $(`div[data-fieldname=\"required_items\"] .grid-heading:contains(\"${frappe.meta.get_docfield(\"Work Order Item\", field).label}\")`).hide();\n\n                        // Hide each cell of the corresponding field\n                        $(`div[data-fieldname=\"required_items\"] .grid-row`).each(function () {\n                            $(this).find(`div[data-fieldname=\"${field}\"]`).hide();\n                        });\n                    });\n                }, 500);\n            }\n        }\n    });\n}\n",
  "view": "Form"
 }
]